name: Build on Release

on:
  release:
    types: [published]

permissions:
  contents: write
  packages: write

jobs:
  build:
    runs-on: macos-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '16'

    - name: Install dependencies
      run: npm install

    - name: Build with pkg
      run: |
        npm install -g pkg
        pkg .

    - name: Create DMG on macOS
      if: runner.os == 'macOS'
      run: |
        echo "Creating DMG on macOS"
        # Install create-dmg tool
        brew install create-dmg
        # Ensure the background image exists
        if [ ! -f assets/mielogo.jpeg ]; then
          echo "Background image not found, using default."
          mkdir -p assets
          curl -o assets/mielogo.jpeg https://via.placeholder.com/800x400.png
        fi
        # Ensure the executable exists
        if [ ! -f dist/DynamicStreamManager-macos ]; then
          echo "DynamicStreamManager-macos not found in dist directory."
          exit 1
        fi
        # Create the DMG
        create-dmg \
            --volname "DynamicStreamManager" \
            --background "assets/mielogo.jpeg" \
            --window-pos 200 120 \
            --window-size 800 400 \
            --icon-size 100 \
            --icon "DynamicStreamManager-macos" 200 190 \
            --hide-extension "DynamicStreamManager-macos" \
            --app-drop-link 600 185 \
            "dist/DynamicStreamManager.dmg" \
            "dist"
        # Delete all artifacts except .dmg
        find dist -type f ! -name '*.dmg' -delete

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-artifacts-${{ github.run_id }}
        path: dist/

    - name: Upload Release For MacOS
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: dist/DynamicStreamManager.dmg
        asset_name: DynamicStreamManager.dmg
        asset_content_type: application/octet-stream

    - name: Upload Release for Windows
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: dist/DynamicStreamManager-win.exe
        asset_name: DynamicStreamManager-win.exe
        asset_content_type: application/octet-stream

    - name: Upload Release for Linux
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: dist/DynamicStreamManager-linux
        asset_name: DynamicStreamManager-linux
        asset_content_type: application/octet-stream
